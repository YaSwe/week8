name: Simple Continuous Integration
on: 
  push:
    branches: [main]

jobs:
  build:
    name: Build and Test for Integration
    runs-on: Ubuntu-latest
    # Set up environment variables for connecting to test database
    env:
      DB_USER : root
      DB_PASSWORD: root
      DB_DATABASE: test_db
      DB_HOST: localhost
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install Plugin
      run: |
        pip install pytest pytest-cov
        pip install flask
        pip install mysql-connector-python
        pip install python-dotenv
        pip install flake8
        
    - name: Checkout Development Code
      uses: actions/checkout@v4
      with: 
        repository: YaSwe/week8

    - name: Checkout Private Repo
      uses: actions/checkout@v4
      with:
        repository: YaSwe/hiddenWeek8
        token: ${{ secrets.WEEK8 }}
        path: hiddenCode

    - name: List Current Files
      run: |
        ls
        sudo mv ./hiddenCode/*.* ./

    - name: Set up MySQL
      run: |
        sudo /etc/init.d/mysql start
        mysql -h localhost --port 3306 -u$DB_USER -p$DB_PASSWORD -e "DROP DATABASE IF EXISTS test_db;"
        mysql -h localhost --port 3306 -u$DB_USER -p$DB_PASSWORD < create_test_db.sql
        mysql -h localhost --port 3306 -u$DB_USER -p$DB_PASSWORD -e "USE test_db; SHOW TABLES;"

    - name: Linter Check with Flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics  

    - name: Run PyTest 
      if: always()
      run: |
        pytest -v -cov --junitxml=report.xml

    - if: ${{ failure() }}
      name: Create Issue on Failed workflow
      uses: dacbd/create-issue-action@main
      with:
        token: ${{ github.token }}
        title: Action workflow failed.
        body: |
          ### Context
          [Failed Run](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
          [Codebase](https://github.com/${{ github.repository }}/tree/${{ github.sha }})
          Workflow name - `${{ github.workflow }}`
          Job -           `${{ github.job }}`
          status -        `${{ job.status }}`
          
    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action/composite@v2
      if: always()
      with: 
        junit_files: "report.xml"

    - name: Prepare Results
      run: |
        mkdir downloads
        mv report.xml ./downloads
        
    - name: Upload Test Results
      uses: actions/upload-artifact@v2
      with: 
        name: testResults
        path: downloads
        
    - name: Download Remote Test Results
      uses: actions/download-artifact@v2
      with:
        name: testResults

    - name: Discord notification
      env:
        DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
      uses: Ilshidur/action-discord@master
      with:
        args: 'A new commit for {{ EVENT_PAYLOAD.repository.full_name }} was pushed.'
