name: Simple Continuous Integration
on: 
  push:
    branches: [main]

jobs:
  build:
    name: Build and Test for Integration
    runs-on: Ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: testdb
          MYSQL_ROOT_PASSWORD: testrootpass
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
  
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install Plugin
      run: |
        pip install pytest pytest-cov
        pip install flask
        
    - name: Checkout Development Code
      uses: actions/checkout@v4
      with: 
        repository: YaSwe/week8

    - name: Checkout Private Repo
      uses: actions/checkout@v4
      with:
        repository: YaSwe/hiddenWeek8
        token: ${{ secrets.WEEK8 }}
        path: hiddenCode

    - name: List Current Files
      run: |
        ls
        sudo mv ./hiddenCode/*.* ./
        
    - name: Test Command
      if: always()
      run: |
        mysql -h 127.0.0.1 -u root -p'testrootpass' testdb < create_test_db.sql
        pytest -v -cov --junitxml=report.xml

    - if: ${{ failure() }}
      name: Create Issue on Failed workflow
      uses: dacbd/create-issue-action@main
      with: 
        token: ${{ github.token }}
        title: Action workflow Workflow name - `${{ github.workflow }}` failed.
        body: |
          ### Context
          [Failed Run](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
          [Codebase](https://github.com/${{ github.repository }}/tree/${{ github.sha }})
          Workflow name - `${{ github.workflow }}`
          Job -           `${{ github.job }}`
          status -        `${{ job.status }}`
          assignees: YaSwe
          
    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action/composite@v2
      if: always()
      with: 
        junit_files: "report.xml"

    - name: Prepare Results
      run: |
        mkdir downloads
        mv report.xml ./downloads

    - name: Upload Test Results
      uses: actions/upload-artifact@v2
      with: 
        name: testResults
        path: downloads
        
    - name: Download Remote Test Results
      uses: actions/download-artifact@v2
      with:
        name: testResults
